/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LMS;
import static LMS.MainForm.con;
import static LMS.MainForm.connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
/**
 *
 * @author Abdul Rehman Lashari
 */
public class IssueBook extends javax.swing.JFrame {
    PreparedStatement ps;
    /**
     * Creates new form IssueBook
     */
    public IssueBook() {
        initComponents();
        dcIssueDate.setDate(new java.util.Date());
        setAutomaticDateTo_cbReturnDate();
        dcReturnDate.setEnabled(false);
    }
    
    public IssueBook(String studentId){
        initComponents();
        dcIssueDate.setDate(new java.util.Date());
        txtStudentId.setText(studentId);
        setAutomaticDateTo_cbReturnDate();
        btnStudentSearchLogic();
        dcReturnDate.setEnabled(false);
    }
    public IssueBook(String bookId, int i){
        initComponents();
        dcIssueDate.setDate(new java.util.Date());
        txtBookId.setText(bookId);
        setAutomaticDateTo_cbReturnDate();
        btnBookSearchLogic();
        dcReturnDate.setEnabled(false);
        txtStudentId.requestFocus();
    }
    
    public IssueBook(String studentId, String bookId) {
        initComponents();
        dcIssueDate.setDate(new java.util.Date());
        txtStudentId.setText(studentId);
        txtBookId.setText(bookId);
        setAutomaticDateTo_cbReturnDate();
        btnStudentSearchLogic();
        btnBookSearchLogic();
        dcReturnDate.setEnabled(false);
    }
    
    public boolean isAcountActive() throws SQLException, ClassNotFoundException{
        MainForm.connection();
        ps = MainForm.con.prepareStatement("SELECT `status` FROM student_data\n" +
                                    "WHERE id = '"+(txtStudentId.getText()).trim()+"'");
        ResultSet rs = ps.executeQuery();
        if (rs.next())
            return rs.getString("status").toLowerCase().equals("active");
        return false;
    }
    
    private boolean isBookPrivate() throws SQLException, ClassNotFoundException{
        MainForm.connection();
        ps = MainForm.con.prepareStatement("SELECT `status` FROM book\n" +
                                    "WHERE id = '"+(txtBookId.getText()).trim()+"'");
        ResultSet rs = ps.executeQuery();
        if (rs.next())
            return rs.getString("status").equals("Private");
        return false;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtBookId = new javax.swing.JTextField();
        btnBookSearch = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();
        lblAuthor = new javax.swing.JLabel();
        lblEdition = new javax.swing.JLabel();
        lblStatus = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lblLanguage = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtStudentId = new javax.swing.JTextField();
        btnStudentSearch = new javax.swing.JButton();
        lblFirstName = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        lblCategory = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lblIssueBookNumber = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lblStudentStatus = new javax.swing.JLabel();
        btnIssue = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        dcReturnDate = new com.toedter.calendar.JDateChooser();
        jLabel15 = new javax.swing.JLabel();
        dcIssueDate = new com.toedter.calendar.JDateChooser();
        btnCancel = new javax.swing.JButton();
        cbIssueTo = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Issue Book");

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Book", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(102, 102, 255))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Language");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Acc No:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Edition");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Title");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Author");

        txtBookId.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtBookId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBookIdKeyPressed(evt);
            }
        });

        btnBookSearch.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnBookSearch.setText("Search");
        btnBookSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookSearchActionPerformed(evt);
            }
        });

        lblTitle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(102, 102, 255));
        lblTitle.setText("Title");

        lblAuthor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblAuthor.setForeground(new java.awt.Color(102, 102, 255));
        lblAuthor.setText("Author");

        lblEdition.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblEdition.setForeground(new java.awt.Color(102, 102, 255));
        lblEdition.setText("Edition");

        lblStatus.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(102, 102, 255));
        lblStatus.setText("Status");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Status");

        lblLanguage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblLanguage.setForeground(new java.awt.Color(102, 102, 255));
        lblLanguage.setText("Language");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel5)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblEdition, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addGap(0, 3, Short.MAX_VALUE)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblLanguage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblStatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap())))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtBookId, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBookSearch)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtBookId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBookSearch))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblAuthor))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(lblEdition))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lblLanguage))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(lblStatus))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Member", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18), new java.awt.Color(255, 0, 255))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Member ID:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("First Name:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Last Name:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Category");

        txtStudentId.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtStudentId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtStudentIdKeyPressed(evt);
            }
        });

        btnStudentSearch.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnStudentSearch.setText("Search");
        btnStudentSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStudentSearchActionPerformed(evt);
            }
        });

        lblFirstName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblFirstName.setForeground(new java.awt.Color(255, 0, 255));
        lblFirstName.setText("Name");

        lblLastName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblLastName.setForeground(new java.awt.Color(255, 0, 255));
        lblLastName.setText("Last Name");

        lblCategory.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblCategory.setForeground(new java.awt.Color(255, 0, 255));
        lblCategory.setText("Category");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("Issued Books:");

        lblIssueBookNumber.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblIssueBookNumber.setForeground(new java.awt.Color(255, 0, 255));
        lblIssueBookNumber.setText("Issued Books");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("Status");

        lblStudentStatus.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblStudentStatus.setForeground(new java.awt.Color(255, 0, 255));
        lblStudentStatus.setText("Status");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(lblCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel7)
                    .addComponent(jLabel13)
                    .addComponent(jLabel6)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel14)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblStudentStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGap(33, 33, 33)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addComponent(txtStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btnStudentSearch))
                                        .addComponent(lblFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGap(34, 34, 34)
                                    .addComponent(lblLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGap(34, 34, 34)
                                    .addComponent(lblIssueBookNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnStudentSearch))
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lblFirstName))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lblLastName))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(lblCategory))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(lblStudentStatus))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(lblIssueBookNumber))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        btnIssue.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnIssue.setText("Issue");
        btnIssue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIssueActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("Return Date:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Issue Date:");

        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        cbIssueTo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cbIssueTo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Student", "Lecturer", "Staff", "Custom" }));
        cbIssueTo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbIssueToItemStateChanged(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setText("Issue To:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnIssue, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbIssueTo, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(41, 41, 41)
                                .addComponent(dcIssueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(dcReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(148, 148, 148))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(133, 133, 133))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbIssueTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dcIssueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dcReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIssue)
                    .addComponent(btnCancel))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 821, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnIssueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIssueActionPerformed
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        try {
            if (!isBookIdCorrect())
                throw new NewException("Wrong Book Accession Number.");
            if (!isStudentIdCorrect())
                throw new NewException("Wrong Member ID.");
            if (!isAcountActive())
                throw new NewException("Member Account is not Currently Active.\nIt is either Cleared or Deactivated.");
            if (isBookPrivate())
                throw new NewException("Private Books are only for to read in Library.\nThese Book Can't be Issued.");
            
            MainForm.connection();
            
            //Checking If Book is Already Issued OR Available....
            ps = MainForm.con.prepareStatement("SELECT status FROM BOOK WHERE id = '"+txtBookId.getText()+"'");
            ResultSet rs = ps.executeQuery();
            if (rs.next()){
                if (!(rs.getString("status").equals("Available") || rs.getString("status").startsWith("Reserved"))){
                    if(JOptionPane.showConfirmDialog(this, "This Book is not Available at Library at this time\n Do You want to Reserve it.", "Book Not Available",
                            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION){
                        ps = MainForm.con.prepareStatement("INSERT INTO RESERVE_BOOK() VALUES('"+txtStudentId.getText()+"', '"+txtBookId.getText()+"')");
                        ps.execute();
                        JOptionPane.showMessageDialog(this, lblTitle.getText()+" Book has Been Reserved for " + lblFirstName.getText() + " " + lblLastName.getText(),
                                "Book Reservation", JOptionPane.INFORMATION_MESSAGE);
                    }
                    throw new ArithmeticException("");
                }
            }
            
            //Issuing the Book....
            ps = MainForm.con.prepareStatement("INSERT INTO issue_book(book_id, student_id, issue_date, return_date)\n" +
                                                "VALUES (?, ?, ?, ?)");
            ps.setString(1, txtBookId.getText());
            ps.setString(2, txtStudentId.getText());
            try{ps.setDate(3, java.sql.Date.valueOf(df.format(dcIssueDate.getDate())));}catch(NullPointerException e){ps.setString(3, "0000-00-00");}
            try{ps.setDate(4, java.sql.Date.valueOf(df.format(dcReturnDate.getDate())));}catch(NullPointerException e){ps.setString(4, "0000-00-00");}
            if(!ps.execute()){
                ps = MainForm.con.prepareStatement("UPDATE lms.book SET status = 'Issued To "+txtStudentId.getText()+"' WHERE id = '"+txtBookId.getText()+"'");
                ps.execute();
                { //Checking if the book was reserved and not it is issued .. so it is necessary to delete it from reserved table.
                    ps = MainForm.con.prepareCall("SELECT student_id FROM RESERVE_BOOK WHERE STUDENT_ID = '"+txtStudentId.getText()+"' AND BOOK_ID = '"+txtBookId.getText()+"'");
                    ResultSet isReserved = ps.executeQuery();
                    if (isReserved.next()){
                        new ReservationOfBook().deleteReservation(txtStudentId.getText(), txtBookId.getText());
                    }
                }
                
                {//Sending Automatic Email to the Member who Issued the Book
                    new Thread(()->{
                        String studentId = txtStudentId.getText();
                        String studentEmail;
                        String author;
                        String title;
                        String bookId = txtBookId.getText();
                        try{
                            connection();
                            {//Conforming weather Automatic Emails are turned On....
                                PreparedStatement ps = con.prepareStatement("SELECT autoEmail1 as a1 FROM email_settings WHERE ID = 1");
                                ResultSet rs2 = ps.executeQuery();
                                if (rs2.next()){
                                    if (rs2.getString("a1").equals("OFF"))
                                        throw new NewException("");
                                }else
                                    throw new NewException("");
                            }

                            {//Getting the email of student.
                                PreparedStatement ps = con.prepareStatement("SELECT EMAIL FROM STUDENT_DATA WHERE ID = " + studentId);
                                ResultSet rs2 = ps.executeQuery();
                                rs2.next();
                                studentEmail = rs2.getString("email");
                            }

                            {//getting the title and author of book.
                                PreparedStatement ps = con.prepareStatement("SELECT title, author FROM BOOK WHERE ID = " + bookId);
                                ResultSet rs2 = ps.executeQuery();
                                rs2.next();
                                title = rs2.getString("title");
                                author = rs2.getString("author");
                            }
                            String msgEmail = "<br>ID: " + bookId + "<br>Title: " + title + "<br> Author: " + author;
                            EmailPackage.AutomaticEmail ae = new EmailPackage.AutomaticEmail();
                            ae.issueBookEmail(studentId, studentEmail, msgEmail, true);

                        }
                        catch (SQLException | ClassNotFoundException ex) {
                            JOptionPane.showMessageDialog(this, "Failed to Save Settings", "Emails", JOptionPane.ERROR_MESSAGE);
                            //Logger.getLogger(EmailSettings.class.getName()).log(Level.SEVERE, null, ex);
                        }  catch (NewException ex) {
                            //Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }).start();
                }
                
                JOptionPane.showMessageDialog(null, "Book is Issued", "Issue Book", JOptionPane.INFORMATION_MESSAGE);
                
            }
            else
                JOptionPane.showMessageDialog(null, "Book could not be Issued", "Issue Book", JOptionPane.ERROR_MESSAGE);
        } catch(ArithmeticException e){}
        catch (NewException e){JOptionPane.showMessageDialog(this, e.getMessage(), "Wrong Input.", JOptionPane.ERROR_MESSAGE);}
        
        catch(java.sql.SQLIntegrityConstraintViolationException e)
        {JOptionPane.showMessageDialog(this, "This Book has been Already Reserved", "Reserve Book", JOptionPane.INFORMATION_MESSAGE);}
        
        catch (SQLException | ClassNotFoundException ex) 
        {Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, ex);}
        
        catch(NullPointerException e){JOptionPane.showMessageDialog(this, "Please Complete the Fields", "Issue Book", JOptionPane.INFORMATION_MESSAGE);}
    }//GEN-LAST:event_btnIssueActionPerformed
    
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private boolean isBookIdCorrect() throws SQLException, ClassNotFoundException{
        MainForm.connection();
        ps = MainForm.con.prepareStatement("SELECT ID FROM BOOK\n" +
                                        "WHERE ID = '"+txtBookId.getText().trim()+"'");
        ResultSet rs = ps.executeQuery();
        return rs.next();
    }
    private void btnBookSearchLogic() {
        try{
            MainForm.connection();
            ps = MainForm.con.prepareStatement("SELECT ID, title, Author, Edition, Language, status FROM LMS.BOOK\n" +
                                            "WHERE ID = '"+txtBookId.getText()+"'");
            ResultSet rs = ps.executeQuery();
            if(rs.next()){
                lblTitle.setText(rs.getString("Title"));
                lblAuthor.setText(rs.getString("Author"));
                lblEdition.setText(rs.getString("Edition"));
                lblStatus.setText(rs.getString("status"));
            }else{
                JOptionPane.showMessageDialog(null, "Wrong Book ID", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        catch(SQLException | ClassNotFoundException e)
        {
            JOptionPane.showMessageDialog(this, e);
//            Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    private void btnBookSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookSearchActionPerformed
        btnBookSearchLogic();
    }//GEN-LAST:event_btnBookSearchActionPerformed

    private boolean isStudentIdCorrect() throws SQLException, ClassNotFoundException{
        MainForm.connection();
        ps = MainForm.con.prepareStatement("SELECT id FROM student_data\n" +
                                    "WHERE id = '"+(txtStudentId.getText()).trim()+"'");
        ResultSet rs = ps.executeQuery();
        return rs.next();
    }
    
    private void btnStudentSearchLogic() {
        try{    
            MainForm.connection();
            ps = MainForm.con.prepareStatement("SELECT id, First_Name, Last_Name, `status`, `group` FROM student_data\n" +
                                        "WHERE id = '"+txtStudentId.getText().trim()+"'");
            ResultSet rs = ps.executeQuery();
            if (rs.next()){
                lblFirstName.setText(rs.getString("First_Name"));
                lblLastName.setText(rs.getString("Last_Name"));
                lblStudentStatus.setText(rs.getString("status"));
                lblCategory.setText(rs.getString("group"));
                
                ps = MainForm.con.prepareStatement("SELECT count(student_id) AS I FROM lms.issue_book WHERE student_id = \""+txtStudentId.getText()+"\"");
                ResultSet rs2 = ps.executeQuery();
                if (rs2.next())
                    lblIssueBookNumber.setText(rs2.getString("I"));
            }else
                JOptionPane.showMessageDialog(null, "Wrong Student ID", "Search Failed", JOptionPane.ERROR_MESSAGE);
        }
        catch(SQLException | ClassNotFoundException e)
        {
            JOptionPane.showMessageDialog(this, e);
//            Logger.getLogger(IssueBook.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    private void btnStudentSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStudentSearchActionPerformed
        btnStudentSearchLogic();
    }//GEN-LAST:event_btnStudentSearchActionPerformed

    private void txtStudentIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStudentIdKeyPressed
        if (java.awt.event.KeyEvent.VK_ENTER == evt.getKeyCode())
                btnStudentSearchLogic();
    }//GEN-LAST:event_txtStudentIdKeyPressed

    private void txtBookIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBookIdKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) 
            btnBookSearchLogic();
        
    }//GEN-LAST:event_txtBookIdKeyPressed

    private void setAutomaticDateTo_cbReturnDate(){
        switch(cbIssueTo.getSelectedIndex()){
            //Issueing to Student for 7 Days..(Option Student)
            case 0 -> {dcReturnDate.setCalendar(new General.Date().addDaysToCurrentDate(7)); dcReturnDate.setEnabled(false);}
            //Issueing to Lecture for 30 Days...(Option Lecturer)
            case 1 -> {dcReturnDate.setCalendar(new General.Date().addDaysToCurrentDate(30)); dcReturnDate.setEnabled(false);}
            //Issueing to Staff for 15 Days...(Option Staff)
            case 2 -> {dcReturnDate.setCalendar(new General.Date().addDaysToCurrentDate(15)); dcReturnDate.setEnabled(false);}
            //Making Date Field enable(true) and letting to choose custom date
            default -> {dcReturnDate.setEnabled(true); dcReturnDate.setDate(null);}
        }
    }
    private void cbIssueToItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbIssueToItemStateChanged
        setAutomaticDateTo_cbReturnDate();
    }//GEN-LAST:event_cbIssueToItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IssueBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IssueBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBookSearch;
    public javax.swing.JButton btnCancel;
    public javax.swing.JButton btnIssue;
    private javax.swing.JButton btnStudentSearch;
    private javax.swing.JComboBox<String> cbIssueTo;
    private com.toedter.calendar.JDateChooser dcIssueDate;
    private com.toedter.calendar.JDateChooser dcReturnDate;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblAuthor;
    private javax.swing.JLabel lblCategory;
    private javax.swing.JLabel lblEdition;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblIssueBookNumber;
    private javax.swing.JLabel lblLanguage;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblStudentStatus;
    private javax.swing.JLabel lblTitle;
    public javax.swing.JTextField txtBookId;
    public javax.swing.JTextField txtStudentId;
    // End of variables declaration//GEN-END:variables
}
