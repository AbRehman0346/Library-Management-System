/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FramesJustForShowingInformation;

import static LMS.MainForm.connection;
import static LMS.MainForm.con;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import static LMS.MainForm.focusGainedLogic;
import static LMS.MainForm.focusLostLogic;
import javax.swing.JOptionPane;
import java.awt.Color;

/**
 *
 * @author Abdul Rehman
 */
public class History extends javax.swing.JFrame {
    DefaultTableModel tmData;
    PreparedStatement ps;
    String studentId = "";
    
    /**
     * Creates new form History
     */
    public History() {
        initComponents();
    }
    
    History(String studentId){
        initComponents();
        tmData = (DefaultTableModel) tblData.getModel();
        try{
            {//Setting Student Data
                connection();
                ps = con.prepareStatement("SELECT id, CONCAT(first_name, ' ', last_name) AS `name`, `group` FROM student_data"
                        + " WHERE id = '"+studentId+"'");
                ResultSet rs = ps.executeQuery();
                
                if (rs.next()){
                    this.studentId = rs.getString("Id");
                    lblId.setText(this.studentId);
                    lblName.setText(rs.getString("name"));
                    lblCategory.setText(rs.getString("group"));
                }
            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(History.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        settblData(studentId);
    }
    
    private void settblData(String studentId){
        try {
            int recordCount = 0;
            tmData.setRowCount(0);
            connection();
            
            //Setting Data to Table....
            ps = con.prepareStatement("SELECT id, book_id, book_name, author, issue_date, return_date FROM history WHERE STUDENT_ID = '"+studentId+"' ORDER BY ID DESC ");
            ResultSet rs = ps.executeQuery();
            while (rs.next()){
                Vector v = new Vector();
                v.add(rs.getString("id"));
                v.add(rs.getString("book_id"));
                v.add(rs.getString("book_name"));
                v.add(rs.getString("author"));
                v.add(rs.getString("issue_date"));
                v.add(rs.getString("return_date"));
                tmData.addRow(v);
                recordCount++;
            }
            lblRecords.setText("Records: " + recordCount);
        } catch (java.sql.SQLSyntaxErrorException e){
            JOptionPane.showMessageDialog(this, "Enter Only Numbers.", "Wrong Input.", JOptionPane.ERROR_MESSAGE);
        } 
        catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(History.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        tfSearch = new javax.swing.JTextField();
        lblRecords = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        lblCategory = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblFullHistory = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("History");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "History ID", "Acc No", "Title", "Author", "Issue Date", "Return Date"
            }
        ));
        jScrollPane1.setViewportView(tblData);

        tfSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tfSearch.setText("Search History");
        tfSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfSearchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfSearchFocusLost(evt);
            }
        });
        tfSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfSearchKeyReleased(evt);
            }
        });

        lblRecords.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblRecords.setText("Records");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("ID:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Name:");

        lblName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblName.setText("Name");

        lblId.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblId.setText("ID");

        lblCategory.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblCategory.setText("Category");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Category:");

        lblFullHistory.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblFullHistory.setText("Full History");
        lblFullHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblFullHistoryMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblFullHistoryMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblFullHistoryMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 853, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblRecords, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblFullHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRecords)
                            .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jLabel2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblId)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addComponent(lblName)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblCategory)
                                .addComponent(lblFullHistory))
                            .addComponent(jLabel7))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tfSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfSearchFocusGained
        tfSearch.setText(focusGainedLogic(tfSearch.getText(), "Search History"));
    }//GEN-LAST:event_tfSearchFocusGained

    private void tfSearchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfSearchFocusLost
        tfSearch.setText(focusLostLogic(tfSearch.getText(), "Search History"));
    }//GEN-LAST:event_tfSearchFocusLost

    private void tfSearchKeyReleasedLogic() {
        try{
            String search = tfSearch.getText();
            tmData.setRowCount(0);
            connection();
            if (!(search.equals("") || search.equals("Search History"))){
                ps = con.prepareStatement("SELECT * FROM LMS.history \n" +
                        "WHERE (student_id REGEXP '"+studentId+"') AND (\n" +
                        "book_id REGEXP '"+search+"' OR\n" +
                        "id REGEXP '"+search+"' OR\n" +
                        "book_name REGEXP '"+search+"' OR\n" +
                        "author REGEXP '"+search+"' OR\n" +
                        "issue_date REGEXP '"+search+"' OR \n" +
                        "return_date REGEXP '"+search+"')\n" +
                        "ORDER BY ID DESC ");
                ResultSet rs = ps.executeQuery();
                while (rs.next()){
                    Vector v = new Vector();
                    v.add(rs.getString("id"));
                    v.add(rs.getString("book_id"));
                    v.add(rs.getString("book_name"));
                    v.add(rs.getString("author"));
                    v.add(rs.getString("issue_date"));
                    v.add(rs.getString("return_date"));
                    tmData.addRow(v);
                }
            }else
                settblData(studentId);
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(History.class.getName()).log(Level.SEVERE, null, ex);
//            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }
    private void tfSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSearchKeyReleased
        tfSearchKeyReleasedLogic();
    }//GEN-LAST:event_tfSearchKeyReleased

    private void lblFullHistoryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFullHistoryMouseEntered
        lblFullHistory.setForeground(new Color(255,0,0));
    }//GEN-LAST:event_lblFullHistoryMouseEntered

    private void lblFullHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFullHistoryMouseClicked
        new LMS.History().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lblFullHistoryMouseClicked

    private void lblFullHistoryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFullHistoryMouseExited
        lblFullHistory.setForeground(new Color(0,0,0));
    }//GEN-LAST:event_lblFullHistoryMouseExited
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(History.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(History.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(History.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(History.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new History().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCategory;
    private javax.swing.JLabel lblFullHistory;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblRecords;
    private javax.swing.JTable tblData;
    private javax.swing.JTextField tfSearch;
    // End of variables declaration//GEN-END:variables
}
